<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChronoTap</name>
    </assembly>
    <members>
        <member name="M:ChronoTap.Pages.Elements.Cards.CategoryAddMiniCard.OnClick_Tapped(System.Object,Microsoft.Maui.Controls.TappedEventArgs)">
            <summary>
            Open Category Editor as Create new Item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ChronoTap.Pages.Elements.Cards.CategoryMiniCard.OnClick_Tapped(System.Object,Microsoft.Maui.Controls.TappedEventArgs)">
            <summary>
            Open Category Editor as Create new Item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ChronoTap.Pages.Elements.Cards.TypeAddMiniCard.OnClick_Tapped(System.Object,Microsoft.Maui.Controls.TappedEventArgs)">
            <summary>
            Open Category Editor as Create new Item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ChronoTap.Pages.Elements.Modals.CategoryEditorModal.Button_colorPicker_Clicked(System.Object,System.EventArgs)">
            <summary>
            Open modal window with color picker
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ChronoTap.Pages.Elements.Modals.EventEditorModal.TbButton_removeEvent_Clicked(System.Object,System.EventArgs)">
            <summary>
            Remove event at all
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="F:ChronoTap.Storage.Database.DatabaseService.DBS">
            Sync version of connection 
        </member>
        <member name="F:ChronoTap.Storage.Database.DatabaseService.DB">
            Async version of connection 
        </member>
        <member name="M:ChronoTap.Storage.Database.DatabaseService.INITIALZE_TABLES">
            <summary>
            Create Database tables before App starts
            </summary>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.ChronoEvent.InsertItemAsync(ChronoTap.Storage.Database.Models.ChronoEvent)">
            <summary>
            Insert an element and return object if Success
            OR return object with Empty ID
            </summary>
            <returns>ChronoEvent</returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.ChronoEvent.GetLastinserted">
            <summary>
            Returns last inserted item depends on CreatedAt field
            </summary>
            <returns>ChronoEvent</returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.ChronoEvent.MakeId">
            <summary>
            Generate unique ID for new row
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.ChronoEvent.GetItemByIdAsync(System.String)">
            <summary>
            Returns only one Item
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.ChronoEvent.GetAllActiveItemsAsync">
            <summary>
            Get collection of active items
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.ChronoEvent.GetAllItemsFromCategoryAsync(System.String)">
            <summary>
            GEt collection of items filtered by category ID
            </summary>
            <param name="category_id"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.ChronoEvent.UpdateItemAsync(ChronoTap.Storage.Database.Models.ChronoEvent)">
            <summary>
            Update fields inside one item by it's ID (should be defined within object)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.ChronoEvent.DeleteItemAsync``1(``0)">
            <summary>
            Remove item by it's ID (should be defined within object)
            </summary>
            <typeparam name="ChronoEvent"></typeparam>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.ChronoEvent.DeleteAllActiveItemsFromCategoryAsync(System.String)">
            <summary>
            Remove collection of items filtered by category ID
            </summary>
            <param name="category_id"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventCategory.InsertItemAsync(ChronoTap.Storage.Database.Models.EventCategory)">
            <summary>
            Insert an element and return object if Success
            OR return object with Empty ID
            </summary>
            <returns>EventCategory</returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventCategory.GetLastinserted">
            <summary>
            Returns last inserted item depends on CreatedAt field
            </summary>
            <returns>EventCategory</returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventCategory.MakeId">
            <summary>
            Generate unique ID for new row
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventCategory.GetItemByIdAsync(System.String)">
            <summary>
            Returns only one Item
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventCategory.CountAll(System.Boolean)">
            <summary>
            Get count of all rows
            </summary>
            <param name="onlyActive"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventCategory.UpdateItemAsync(ChronoTap.Storage.Database.Models.EventCategory)">
            <summary>
            Update fields inside one item by it's ID (should be defined within object)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventCategory.DeleteItemAsync``1(``0)">
            <summary>
            Remove item by it's ID (should be defined within object)
            </summary>
            <typeparam name="EventCategory"></typeparam>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.InsertItemAsync(ChronoTap.Storage.Database.Models.EventType)">
            <summary>
            Insert an element and return object if Success
            OR return object with Empty ID
            </summary>
            <returns>EventType</returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.GetLastinserted">
            <summary>
            Returns last inserted item depends on CreatedAt field
            </summary>
            <returns>EventType</returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.MakeId">
            <summary>
            Generate unique ID for new row
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.GetItemByIdAsync(System.String)">
            <summary>
            Returns only one Item
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.GetAllActiveItemsAsync">
            <summary>
            Get collection of active items
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.GetAllActiveItemsByCategoryAsync(System.String)">
            <summary>
            Get collection of active items
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.CountAll(System.Boolean)">
            <summary>
            Get count of all rows
            </summary>
            <param name="onlyActive"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.GetAllActiveItemsFromCategoryAsync(System.String)">
            <summary>
            GEt collection of items filtered by category ID
            </summary>
            <param name="category_id"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.UpdateItemAsync(ChronoTap.Storage.Database.Models.EventType)">
            <summary>
            Update fields inside one item by it's ID (should be defined within object)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.DeleteItemAsync``1(``0)">
            <summary>
            Remove item by it's ID (should be defined within object)
            </summary>
            <typeparam name="EventType"></typeparam>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChronoTap.Storage.Database.Models.EventType.DeleteAllActiveItemsFromCategoryAsync(System.String)">
            <summary>
            Remove collection of items filtered by category ID
            </summary>
            <param name="category_id"></param>
            <returns></returns>
        </member>
        <member name="P:ChronoTap.Database.StorageConfig.DatabasePath">
            A full database path
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Button.TextColorTo(Microsoft.Maui.Controls.Button,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_DatePicker.TextColorTo(Microsoft.Maui.Controls.DatePicker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Editor.TextColorTo(Microsoft.Maui.Controls.Editor,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Entry.TextColorTo(Microsoft.Maui.Controls.Entry,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_InputView.TextColorTo(Microsoft.Maui.Controls.InputView,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Label.TextColorTo(Microsoft.Maui.Controls.Label,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Picker.TextColorTo(Microsoft.Maui.Controls.Picker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_RadioButton.TextColorTo(Microsoft.Maui.Controls.RadioButton,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_SearchBar.TextColorTo(Microsoft.Maui.Controls.SearchBar,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_TimePicker.TextColorTo(Microsoft.Maui.Controls.TimePicker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
    </members>
</doc>
